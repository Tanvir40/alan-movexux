// src/components/Header.tsx
"use client";
import Button from "@/components/Button";
import MobileMenu from "@/components/MobileMenu";
import { useLanguage } from "@/../hooks/useLanguage";
import Link from "next/link";
import { useState } from "react";

{/*Dropdown Links*/}
const services = [
  { name: "International Move", href: "/services/international-moving", description: "Explore guidance and tips for moving abroad smoothly and efficiently." },
  { name: "Domestic Move", href: "/services/domestic-moving", description: "Discover practical advice for relocating within your country with ease." },
  { name: "Office / Corporate Move", href: "/services/office-moving", description: "Learn strategies for seamless office or corporate relocations." },
  { name: "Furniture & Heavy Goods Move", href: "/services/furniture-heavy-goods-moving", description: "Find expert tips for safely transporting large and heavy items." },
  { name: "Man with Van / Small Moves", href: "/services/man-with-van", description: "Explore simple solutions for small-scale relocations and deliveries." },
  { name: "Storage & Warehousing", href: "/services/storage-warehousing", description: "Discover how to securely store your belongings for short or long term." },
  { name: "Packing & Assembly", href: "/services/packing-assembly", description: "Learn smart ways to pack, protect, and assemble your items efficiently." },
  { name: "Sea Move (Container Shipping)", href: "/services/sea-moving", description: "Explore advice for international shipping via sea containers safely and efficiently." },
];
const destinations = [
   { name: "Berlin, Germany", href: "/destinations/berlin", description: "Reliable moving services to Berlin." },
  { name: "Paris, France", href: "/destinations/paris", description: "Professional relocation to Paris." },
  { name: "London, UK", href: "/destinations/london", description: "Smooth moving to London." },
  { name: "Rome, Italy", href: "/destinations/rome", description: "Trusted relocation to Rome." },
  { name: "Madrid, Spain", href: "/destinations/madrid", description: "Hassle-free moving to Madrid." },
  { name: "Amsterdam, Netherlands", href: "/destinations/amsterdam", description: "Expert moving to Amsterdam." },
  { name: "Vienna, Austria", href: "/destinations/vienna", description: "Efficient relocation to Vienna." },
  { name: "Zurich, Switzerland", href: "/destinations/zurich", description: "Secure moving to Zurich." },
];
{/* Resources Array */}
const resources = [
  { name: "Moving Guide", href: "/resources/moving-guide", description: "Step-by-step guide for your move." },
  { name: "Packing Tips", href: "/resources/packing-tips", description: "Tips to pack efficiently and safely." },
  { name: "FAQ", href: "/resources/faq", description: "Frequently asked questions about moving." },
  { name: "Moving Checklist", href: "/resources/moving-checklist", description: "Everything you need to do before moving." },
  { name: "Cost Calculator", href: "/resources/cost-calculator", description: "Estimate your moving expenses easily." },
  { name: "Insurance Info", href: "/resources/insurance-info", description: "Guide to moving insurance and protection." },
  { name: "Customer Stories", href: "/resources/customer-stories", description: "Real-life moving experiences." },
  { name: "Blog", href: "/resources/blog", description: "Articles about moving tips and destinations." },
];
{/* Language Array */}
const language = [
  { name: "English (EN)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="18" height="18" x="0" y="0" viewBox="0 0 480 480" ><g><g data-name="Layer 2"><g data-name="United Kingdom"><path fill="#ffffff" d="M480 240c0 132.51-107.39 239.94-239.89 240h-2.59a242.26 242.26 0 0 1-34.74-2.87 236 236 0 0 1-27.9-6.06A240.08 240.08 0 0 1 0 240C0 107.47 107.42 0 240 0h.11a239.26 239.26 0 0 1 174.34 75.17A239.79 239.79 0 0 1 480 240z" opacity="1" data-original="#ffffff" ></path><path fill="#c8102e" d="M179.43 168.62v10.8h-34.89l-98-81.49a239 239 0 0 1 19.7-23.48zM433.77 98.37l-97.43 81h-35.77v-10.02l113.58-94.49.3.31A236.65 236.65 0 0 1 432.79 97zM179.43 300.56v10.8L66.24 405.55c-1-1-2-2.08-2.94-3.13a238.48 238.48 0 0 1-16.75-20.35l98-81.51zM433.78 381.62a240 240 0 0 1-19.62 23.51l-113.59-94.5v-10.07h35.77z" opacity="1" data-original="#c8102e" ></path><g fill="#012169"><path d="M95.85 179.42H7.71a237.85 237.85 0 0 1 22-55.07zM93.86 300.56 29 354.5a238 238 0 0 1-21.29-53.94zM179.43 351.28v121c-1.52-.39-3-.8-4.55-1.23a239.12 239.12 0 0 1-86.09-44.68zM179.43 7.71v119.1L90.14 52.53a239.16 239.16 0 0 1 89.29-44.82zM391.23 53.65l-90.66 75.15V7.72l1.37.35a239 239 0 0 1 89.29 45.58zM472.29 179.42h-86L451 125.58a238.17 238.17 0 0 1 21.29 53.84zM392 425.78a239.25 239.25 0 0 1-91.38 46.51V349.76zM472.29 300.56a238.61 238.61 0 0 1-20.65 52.71l-63.35-52.71z" fill="#012169" opacity="1" data-original="#012169" ></path></g><path fill="#c8102e" d="M480 237.49v4.79a242.25 242.25 0 0 1-2.63 33.43H275.71v201.65a242.45 242.45 0 0 1-33.22 2.64h-5a240.78 240.78 0 0 1-33.23-2.65V275.71H2.64A243 243 0 0 1 0 242.45v-4.73a242.4 242.4 0 0 1 2.63-33.44h201.66V2.64A243.84 243.84 0 0 1 235.91 0h7.74a240.26 240.26 0 0 1 30.19 2.34l1.87.28v201.66h201.65a242.31 242.31 0 0 1 2.64 33.21z" opacity="1" data-original="#c8102e" ></path></g></g></g></svg>)},
  { name: "German (DE)", code: "en", href: "#" , icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><path fill="#ffda44" d="M15.923 345.043C52.094 442.527 145.929 512 256 512s203.906-69.473 240.077-166.957L256 322.783z" opacity="1" data-original="#ffda44" ></path><path d="M256 0C145.929 0 52.094 69.472 15.923 166.957L256 189.217l240.077-22.261C459.906 69.472 366.071 0 256 0z" fill="#000000" opacity="1" data-original="#000000" ></path><path fill="#d80027" d="M15.923 166.957C5.633 194.69 0 224.686 0 256s5.633 61.31 15.923 89.043h480.155C506.368 317.31 512 287.314 512 256s-5.632-61.31-15.923-89.043z" opacity="1" data-original="#d80027" ></path></g></svg>)},
  { name: "French (FR)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><circle cx="256" cy="256" r="256" fill="#f0f0f0" opacity="1" data-original="#f0f0f0" ></circle><path fill="#d80027" d="M512 256c0-110.071-69.472-203.906-166.957-240.077v480.155C442.528 459.906 512 366.071 512 256z" opacity="1" data-original="#d80027"></path><path fill="#0052b4" d="M0 256c0 110.071 69.473 203.906 166.957 240.077V15.923C69.473 52.094 0 145.929 0 256z" opacity="1" data-original="#0052b4" ></path></g></svg>)},
  { name: "Spanish (ES)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><path fill="#ffda44" d="M0 256c0 31.314 5.633 61.31 15.923 89.043L256 367.304l240.077-22.261C506.367 317.31 512 287.314 512 256s-5.633-61.31-15.923-89.043L256 144.696 15.923 166.957C5.633 194.69 0 224.686 0 256z" opacity="1" data-original="#ffda44" ></path><g fill="#d80027"><path d="M496.077 166.957C459.906 69.473 366.071 0 256 0S52.094 69.473 15.923 166.957zM15.923 345.043C52.094 442.527 145.929 512 256 512s203.906-69.473 240.077-166.957z" fill="#d80027" opacity="1" data-original="#d80027" ></path></g></g></svg>)},
  { name: "Swedish (SV)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><clipPath id="a"><path d="M495.945 796.38a240.032 240.032 0 1 1-480.064 0 240.032 240.032 0 1 1 480.064 0z" fill="#000000" opacity="1" data-original="#000000"></path></clipPath><g clip-path="url(#a)" transform="translate(0 -540.362)"><path fill="#2980b9" d="M16 556.362h480v480H16z" opacity="1" data-original="#2980b9" ></path><g fill="#f1c40f"><path d="M496 756.362v80H16v-80z" fill="#f1c40f" opacity="1" data-original="#f1c40f" ></path><path d="M233.936 1036.362h-80v-480h80z" fill="#f1c40f" opacity="1" data-original="#f1c40f" ></path></g></g></g></svg>)},
  { name: "Norwegian (NO)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><circle cx="256" cy="256" r="256" fill="#f0f0f0" opacity="1" data-original="#f0f0f0"></circle><g fill="#d80027"><path d="M8.819 322.783c14.812 54.959 47.457 102.593 91.355 136.322V322.783zM233.739 511.026A259.29 259.29 0 0 0 256 512c118.279 0 217.805-80.221 247.181-189.217H233.739zM503.181 189.217C473.805 80.221 374.279 0 256 0c-7.502 0-14.923.342-22.261.974v188.243zM100.174 52.895c-43.898 33.73-76.543 81.363-91.355 136.322h91.355z" fill="#d80027" opacity="1" data-original="#d80027" ></path></g><path fill="#0052b4" d="M509.833 222.609H200.348V6.085a254.258 254.258 0 0 0-66.783 25.042v191.481H2.167C.742 233.539 0 244.683 0 256s.742 22.461 2.167 33.391h131.398v191.481a254.258 254.258 0 0 0 66.783 25.042V289.392h309.485C511.256 278.461 512 267.317 512 256s-.744-22.461-2.167-33.391z" opacity="1" data-original="#0052b4" ></path></g></svg>)},
  { name: "Danish (DA)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512"  ><g><circle cx="256" cy="256" r="256" fill="#f0f0f0" opacity="1" data-original="#f0f0f0"></circle><g fill="#d80027"><path d="M200.349 222.609h309.484C493.47 97.002 386.067 0 256 0a256.902 256.902 0 0 0-55.652 6.085v216.524zM133.565 222.608V31.127C63.272 69.481 12.95 139.832 2.167 222.609h131.398zM133.564 289.391H2.167c10.783 82.777 61.105 153.128 131.398 191.481zM200.348 289.392v216.523A256.902 256.902 0 0 0 256 512c130.067 0 237.47-97.002 253.833-222.609H200.348z" fill="#d80027" opacity="1" data-original="#d80027"></path></g></g></svg>)},
  { name: "Italian (IT)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 30 30"  ><g><circle cx="15" cy="15" r="15" fill="#ed1c24" data-original="#ed1c24"></circle><path d="M15 0C6.7 0 0 6.7 0 15s6.7 15 15 15V0z" fill="#009245" data-original="#009245"></path><path d="M15 0c-1.7 0-3.4.3-5 .9v28.3c3.2 1.2 6.8 1.2 10 0V.9C18.4.3 16.7 0 15 0z" fill="#f0f0f0" data-original="#f0f0f0"></path></g></svg>)},
  { name: "Dutch (NL)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><path fill="#ed1c24" d="M494.982 169.758H17.018C52.325 71.933 145.982 2 256 2s203.676 69.933 238.982 167.758z" opacity="1" data-original="#ed1c24" ></path><path fill="#f1f2f2" d="M510 256c0 30.646-5.424 60.035-15.373 87.229H17.375C7.425 316.035 2 286.646 2 256c0-30.272 5.289-59.32 15.018-86.242h477.965C504.712 196.68 510 225.728 510 256z" opacity="1" data-original="#f1f2f2" ></path><path fill="#21409a" d="M494.627 343.229C459.048 440.543 365.646 510 256 510c-109.644 0-203.047-69.457-238.625-166.771z" opacity="1" data-original="#21409a" ></path></g></svg>)},
  { name: "Polish (PL)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512.01" ><g><path fill="#f0f0f0" d="M256 512c141.38 0 256-114.63 256-256S397.38 0 256 0 0 114.63 0 256s114.62 256 256 256z" opacity="1" data-original="#f0f0f0" ></path><path fill="#d80027" d="M512 256c0 141.37-114.63 256-256 256S0 397.38 0 256" opacity="1" data-original="#d80027" ></path></g></svg>)},
  { name: "Portuguese (PT)", code: "en", href: "#", icon: (<svg xmlns="http://www.w3.org/2000/svg" version="1.1"  width="18" height="18"  x="0" y="0" viewBox="0 0 512 512" ><g><g fill-rule="evenodd" clipRule="evenodd"><path fill="#e92b2b" d="M480 256c0 123.712-100.288 224-224 224S32 379.712 32 256 132.288 32 256 32s224 100.288 224 224z" opacity="1" data-original="#e92b2b"></path><path fill="#32ab45" d="M192 470.721C99.472 443.184 32 357.47 32 255.997 32 154.525 99.472 68.811 192 41.273z" opacity="1" data-original="#32ab45" ></path><path fill="#ffe70e" d="M192 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-64 48c0-35.346 28.654-64 64-64s64 28.654 64 64-28.654 64-64 64-64-28.654-64-64z" opacity="1" data-original="#ffe70e"></path><path fill="#ffe70e" d="m226.344 301.657-80-80 11.313-11.313 80 80z" opacity="1" data-original="#ffe70e"></path><path fill="#ffe70e" d="M184 312.567V199.43h16v113.137z" opacity="1" data-original="#ffe70e"></path><path fill="#ffe70e" d="M135.988 248.57h113.137v16H135.988z" opacity="1" data-original="#ffe70e"></path><path fill="#ffe70e" d="m157.656 301.657 80-80-11.313-11.313-80 80z" opacity="1" data-original="#ffe70e"></path></g><path fill="#e92b2b" d="M216 224h-48a8 8 0 0 0-8 8v32c0 17.673 14.327 32 32 32s32-14.327 32-32v-32a8 8 0 0 0-8-8z" opacity="1" data-original="#e92b2b"></path><path fill="#fbfbfb" d="M208 240h-32v24c0 8.837 7.163 16 16 16s16-7.163 16-16z" opacity="1" data-original="#fbfbfb"></path></g></svg>)},
];

{/*Dropdown State*/}
export default function Header() {
  const [hoverServices, setHoverServices] = useState(false);
  const [hoverDestinations, setHoverDestinations] = useState(false);
  const [hoverResources, setHoverResources] = useState(false);
  const [hoverLanguage, setHoverLanguage] = useState(false);
  const isHovering = hoverServices || hoverDestinations || hoverResources;

  // ✅ ANVÄND useLanguage hook
  const { lang, changeLanguage } = useLanguage();

  {/*Dropdown Function*/}
  const handleDropdown = (menu: "services" | "destinations" | "resources", value: boolean) => {
  setHoverServices(menu === "services" ? value : false);
  setHoverDestinations(menu === "destinations" ? value : false);
  setHoverResources(menu === "resources" ? value : false);
};

  return (
    <header
  className={`relative z-50 transition-colors duration-300 mvx-bg ${
    hoverServices || hoverDestinations || hoverResources
      ? "bg-white text-[var(--primary)]"
      : "text-white"
  }`}
>
      <div className="container mx-auto">
        <nav className="flex items-center justify-between py-4 relative z-50">
          {/* Logo */}
          <Link href="/" className="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width={190} height={45} viewBox="0 0 2575 512" fill="none" className={`transition-colors duration-300 text-primay md:${isHovering ? 'text-primay' : 'text-white'} `}>
          <path d="M256.8 496C254.678 496 252.643 495.157 251.143 493.657C249.643 492.157 248.8 490.122 248.8 488C248.8 485.878 249.643 483.843 251.143 482.343C252.643 480.843 254.678 480 256.8 480C308.84 480 352.8 377.424 352.8 256C352.8 134.576 308.88 32 256.8 32C254.678 32 252.643 31.1571 251.143 29.6569C249.643 28.1566 248.8 26.1217 248.8 24C248.8 21.8783 249.643 19.8434 251.143 18.3431C252.643 16.8429 254.678 16 256.8 16C320.452 16 381.497 41.2856 426.505 86.2944C471.514 131.303 496.8 192.348 496.8 256C496.8 319.652 471.514 380.697 426.505 425.706C381.497 470.714 320.452 496 256.8 496ZM303.296 36.8C342.288 73.96 368.84 157.096 368.84 256C368.84 354.904 342.288 438 303.296 475.2C353.552 464.58 398.631 437.01 430.98 397.111C463.329 357.211 480.983 307.406 480.983 256.04C480.983 204.674 463.329 154.869 430.98 114.969C398.631 75.0697 353.552 47.5001 303.296 36.88V36.8Z" fill="currentColor"/>
          <path d="M488.84 264H256C253.878 264 251.843 263.157 250.343 261.657C248.843 260.157 248 258.122 248 256C248 253.878 248.843 251.843 250.343 250.343C251.843 248.843 253.878 248 256 248H488.8C490.922 248 492.957 248.843 494.457 250.343C495.957 251.843 496.8 253.878 496.8 256C496.8 258.122 495.957 260.157 494.457 261.657C492.957 263.157 490.922 264 488.8 264H488.84ZM456.84 144H256C253.878 144 251.843 143.157 250.343 141.657C248.843 140.157 248 138.122 248 136C248 133.878 248.843 131.843 250.343 130.343C251.843 128.843 253.878 128 256 128H456.8C458.922 128 460.957 128.843 462.457 130.343C463.957 131.843 464.8 133.878 464.8 136C464.8 138.122 463.957 140.157 462.457 141.657C460.957 143.157 458.922 144 456.8 144H456.84ZM456.84 384H256C253.878 384 251.843 383.157 250.343 381.657C248.843 380.157 248 378.122 248 376C248 373.878 248.843 371.843 250.343 370.343C251.843 368.843 253.878 368 256 368H456.8C458.922 368 460.957 368.843 462.457 370.343C463.957 371.843 464.8 373.878 464.8 376C464.8 378.122 463.957 380.157 462.457 381.657C460.957 383.157 458.922 384 456.8 384H456.84Z" fill="currentColor"/>
          <path d="M256 496C253.878 496 251.843 495.157 250.343 493.657C248.843 492.157 248 490.122 248 488V24C248 21.8783 248.843 19.8434 250.343 18.3431C251.843 16.8429 253.878 16 256 16C258.122 16 260.157 16.8429 261.657 18.3431C263.157 19.8434 264 21.8783 264 24V488C264 490.122 263.157 492.157 261.657 493.657C260.157 495.157 258.122 496 256 496Z" fill="currentColor"/>
          <path d="M195.96 39.9038C200.378 39.9038 203.96 36.3221 203.96 31.9038C203.96 27.4855 200.378 23.9038 195.96 23.9038C191.542 23.9038 187.96 27.4855 187.96 31.9038C187.96 36.3221 191.542 39.9038 195.96 39.9038Z" fill="currentColor"/>
          <path d="M140.008 63.0801C144.426 63.0801 148.008 59.4984 148.008 55.0801C148.008 50.6618 144.426 47.0801 140.008 47.0801C135.59 47.0801 132.008 50.6618 132.008 55.0801C132.008 59.4984 135.59 63.0801 140.008 63.0801Z" fill="currentColor"/>
          <path d="M91.96 99.9521C96.3782 99.9521 99.96 96.3704 99.96 91.9521C99.96 87.5339 96.3782 83.9521 91.96 83.9521C87.5417 83.9521 83.96 87.5339 83.96 91.9521C83.96 96.3704 87.5417 99.9521 91.96 99.9521Z" fill="currentColor"/>
          <path d="M55.0879 147.992C59.5062 147.992 63.0879 144.41 63.0879 139.992C63.0879 135.574 59.5062 131.992 55.0879 131.992C50.6696 131.992 47.0879 135.574 47.0879 139.992C47.0879 144.41 50.6696 147.992 55.0879 147.992Z" fill="currentColor"/>
          <path d="M31.9116 203.944C36.3299 203.944 39.9116 200.362 39.9116 195.944C39.9116 191.526 36.3299 187.944 31.9116 187.944C27.4933 187.944 23.9116 191.526 23.9116 195.944C23.9116 200.362 27.4933 203.944 31.9116 203.944Z" fill="currentColor"/>
          <path d="M24.0078 263.992C28.4261 263.992 32.0078 260.41 32.0078 255.992C32.0078 251.574 28.4261 247.992 24.0078 247.992C19.5895 247.992 16.0078 251.574 16.0078 255.992C16.0078 260.41 19.5895 263.992 24.0078 263.992Z" fill="currentColor"/>
          <path d="M31.9116 324.032C36.3299 324.032 39.9116 320.451 39.9116 316.032C39.9116 311.614 36.3299 308.032 31.9116 308.032C27.4933 308.032 23.9116 311.614 23.9116 316.032C23.9116 320.451 27.4933 324.032 31.9116 324.032Z" fill="currentColor"/>
          <path d="M55.0879 379.984C59.5062 379.984 63.0879 376.402 63.0879 371.984C63.0879 367.566 59.5062 363.984 55.0879 363.984C50.6696 363.984 47.0879 367.566 47.0879 371.984C47.0879 376.402 50.6696 379.984 55.0879 379.984Z" fill="currentColor"/>
          <path d="M91.96 428.032C96.3782 428.032 99.96 424.451 99.96 420.032C99.96 415.614 96.3782 412.032 91.96 412.032C87.5417 412.032 83.96 415.614 83.96 420.032C83.96 424.451 87.5417 428.032 91.96 428.032Z" fill="currentColor"/>
          <path d="M140.008 464.896C144.426 464.896 148.008 461.314 148.008 456.896C148.008 452.478 144.426 448.896 140.008 448.896C135.59 448.896 132.008 452.478 132.008 456.896C132.008 461.314 135.59 464.896 140.008 464.896Z" fill="currentColor"/>
          <path d="M195.96 488.072C200.378 488.072 203.96 484.49 203.96 480.072C203.96 475.653 200.378 472.072 195.96 472.072C191.542 472.072 187.96 475.653 187.96 480.072C187.96 484.49 191.542 488.072 195.96 488.072Z" fill="currentColor"/>
          <path d="M92.7461 247.277V291.418C92.7461 296.691 94.5365 300.24 98.1172 302.062C99.6146 302.909 101.242 303.56 103 304.016C104.823 304.471 106.548 305.188 108.176 306.164V313H64.8164V306.164C66.1836 305.188 67.7135 304.471 69.4062 304.016C71.1641 303.495 72.7917 302.844 74.2891 302.062C77.8698 300.24 79.6602 296.691 79.6602 291.418V212.414L92.7461 247.277ZM83.3711 197.766C82.2643 195.031 81.2552 192.622 80.3438 190.539C78.651 190.148 76.8932 189.758 75.0703 189.367C73.3125 188.977 71.5547 188.586 69.7969 188.195C66.0208 187.219 63.0911 186.307 61.0078 185.461V174.23H108.078L150.363 284.973L143.332 313H126.535L83.3711 197.766ZM147.629 253.723L167.551 174.23H219.113V181.555C217.355 182.271 215.663 182.824 214.035 183.215C212.408 183.54 210.943 184.029 209.641 184.68C206.776 186.112 205.344 188.879 205.344 192.98V294.445C205.344 298.482 206.776 301.216 209.641 302.648C210.943 303.299 212.408 303.82 214.035 304.211C215.663 304.536 217.355 305.057 219.113 305.773V313H159.641V305.773C161.398 305.057 163.091 304.536 164.719 304.211C166.411 303.82 167.909 303.299 169.211 302.648C172.141 301.216 173.605 298.482 173.605 294.445V195.227H173.117L154.27 270.91L147.629 253.723Z" fill="currentColor"/>
          <path d="M658.365 255.693V366.045C658.365 379.229 662.841 388.099 671.793 392.656C675.536 394.772 679.605 396.4 684 397.539C688.557 398.678 692.87 400.469 696.939 402.91V420H588.541V402.91C591.959 400.469 595.784 398.678 600.016 397.539C604.41 396.237 608.479 394.609 612.223 392.656C621.174 388.099 625.65 379.229 625.65 366.045V168.535L658.365 255.693ZM634.928 131.914C632.161 125.078 629.638 119.056 627.359 113.848C623.128 112.871 618.733 111.895 614.176 110.918C609.781 109.941 605.387 108.965 600.992 107.988C591.552 105.547 584.228 103.268 579.02 101.152V73.0762H696.695L802.408 349.932L784.83 420H742.838L634.928 131.914ZM795.572 271.807L845.377 73.0762H974.283V91.3867C969.889 93.1771 965.657 94.5605 961.588 95.5371C957.519 96.3509 953.857 97.5716 950.602 99.1992C943.44 102.78 939.859 109.697 939.859 119.951V373.613C939.859 383.704 943.44 390.54 950.602 394.121C953.857 395.749 957.519 397.051 961.588 398.027C965.657 398.841 969.889 400.143 974.283 401.934V420H825.602V401.934C829.996 400.143 834.228 398.841 838.297 398.027C842.529 397.051 846.272 395.749 849.527 394.121C856.852 390.54 860.514 383.704 860.514 373.613V125.566H859.293L812.174 314.775L795.572 271.807ZM1117.11 199.053C1097.41 206.214 1087.56 238.848 1087.56 296.953C1087.56 325.599 1089.76 347.979 1094.16 364.092C1098.71 380.042 1106.36 390.133 1117.11 394.365V423.662C1084.72 421.058 1058.02 408.037 1037.03 384.6C1015.87 360.999 1005.29 332.028 1005.29 297.686C1005.29 263.994 1015.87 234.941 1037.03 210.527C1058.67 185.951 1085.37 172.36 1117.11 169.756V199.053ZM1168.62 296.953C1168.62 238.848 1158.69 206.214 1138.83 199.053V169.756C1171.06 172.36 1197.75 185.951 1218.91 210.527C1240.07 234.941 1250.65 263.994 1250.65 297.686C1250.65 332.028 1240.07 360.999 1218.91 384.6C1197.92 408.037 1171.22 421.058 1138.83 423.662V394.365C1149.58 390.296 1157.23 380.286 1161.78 364.336C1166.34 348.223 1168.62 325.762 1168.62 296.953ZM1416.18 314.531L1444.99 232.012C1448.4 222.083 1450.11 215.329 1450.11 211.748C1450.11 208.167 1449.14 205.482 1447.18 203.691C1445.39 201.901 1443.11 200.436 1440.35 199.297C1437.74 198.158 1434.81 197.181 1431.56 196.367C1428.47 195.391 1425.62 194.17 1423.01 192.705V174.639H1510.42V191.24C1508.14 192.705 1505.53 194.007 1502.6 195.146C1499.67 196.286 1496.83 197.588 1494.06 199.053C1487.39 202.633 1482.99 207.354 1480.88 213.213L1430.58 352.373L1416.18 314.531ZM1405.44 420H1362.22L1284.1 219.805C1279.54 208.249 1271.73 200.762 1260.66 197.344C1257.89 196.367 1255.21 194.984 1252.6 193.193V174.639H1386.39V192.705C1383.79 194.495 1380.78 195.879 1377.36 196.855C1374.1 197.832 1371.01 198.89 1368.08 200.029C1360.76 202.796 1357.1 206.865 1357.1 212.236C1357.1 216.794 1365.32 240.882 1381.75 284.502C1398.19 328.122 1410.64 361.488 1419.11 384.6L1405.44 420ZM1652.99 394.365C1685.71 392.738 1707.68 374.671 1718.91 340.166L1741.37 350.42C1729.17 395.179 1699.71 419.593 1652.99 423.662V394.365ZM1645.67 169.756C1679.2 172.197 1704.35 185.544 1721.11 209.795C1736.08 231.279 1743.57 260.007 1743.57 295.977H1617.84V271.074H1668.38C1668.38 250.241 1666.75 233.802 1663.49 221.758C1660.4 209.551 1654.46 201.982 1645.67 199.053V169.756ZM1631.27 423.662C1595.95 420.895 1567.46 407.142 1545.82 382.402C1525.63 359.453 1515.54 331.214 1515.54 297.686C1515.54 262.529 1525.72 232.988 1546.06 209.062C1566.24 185.137 1592.2 172.035 1623.94 169.756V199.053C1613.2 202.796 1605.63 212.887 1601.24 229.326C1597 245.765 1594.89 264.32 1594.89 284.99C1594.89 305.498 1595.38 320.879 1596.35 331.133C1597.49 341.224 1599.45 350.339 1602.21 358.477C1607.91 375.566 1617.59 387.529 1631.27 394.365V423.662ZM1875.89 349.199L1856.61 374.59C1853.03 379.473 1851.24 383.704 1851.24 387.285C1851.24 390.866 1852.13 393.389 1853.92 394.854C1855.88 396.318 1858.24 397.539 1861 398.516C1863.77 399.329 1866.78 400.143 1870.04 400.957C1873.29 401.771 1876.3 403.073 1879.07 404.863V420H1771.65V402.91C1773.76 400.794 1776.61 399.248 1780.19 398.271C1783.77 397.295 1787.84 395.911 1792.4 394.121C1804.77 389.401 1816.08 380.612 1826.33 367.754L1859.29 326.494L1875.89 349.199ZM1809.73 218.828C1801.27 207.272 1791.75 199.622 1781.17 195.879C1778.56 195.065 1776.2 193.844 1774.09 192.217V174.639H1911.78V191.24C1909.5 192.705 1907.06 193.926 1904.46 194.902C1902.02 195.716 1899.74 196.693 1897.62 197.832C1892.9 200.111 1890.54 202.633 1890.54 205.4C1890.54 208.167 1890.95 210.609 1891.76 212.725C1892.74 214.84 1894.12 217.201 1895.91 219.805C1897.7 222.897 1902.75 230.14 1911.05 241.533L2010.42 380.449C2017.9 391.191 2027.1 397.702 2038 399.98C2040.28 400.469 2042.32 401.445 2044.11 402.91V420H1903.97V404.375C1906.09 402.585 1908.37 400.957 1910.81 399.492C1913.41 397.865 1915.85 396.237 1918.13 394.609C1923.5 390.54 1926.19 386.227 1926.19 381.67C1926.19 381.182 1923.26 377.031 1917.4 369.219C1911.7 361.406 1908.12 356.442 1906.66 354.326L1809.73 218.828ZM1937.42 240.801L1952.8 221.27C1957.19 215.736 1959.39 211.423 1959.39 208.33C1959.39 205.238 1958.5 203.04 1956.71 201.738C1955.08 200.273 1953.12 199.134 1950.85 198.32C1948.57 197.507 1946.13 196.693 1943.52 195.879C1941.08 195.065 1939.13 193.844 1937.66 192.217V174.639H2037.27V192.217C2031.09 192.217 2023.19 195.146 2013.59 201.006C2003.99 206.702 1994.47 215.166 1985.03 226.396L1953.78 263.75L1937.42 240.801ZM2204.26 415.117C2193.52 420.814 2177.41 423.662 2155.92 423.662C2134.44 423.662 2118 417.559 2106.61 405.352C2095.21 393.145 2089.52 374.59 2089.52 349.688V217.119C2089.52 208.493 2085.61 202.633 2077.8 199.541C2074.54 198.239 2071.04 197.181 2067.3 196.367C2063.72 195.553 2060.55 194.007 2057.78 191.729V174.639H2162.03V356.279C2162.03 368.649 2163.98 378.089 2167.89 384.6C2171.96 391.11 2177.73 394.365 2185.22 394.365C2192.71 394.365 2199.06 392.656 2204.26 389.238V415.117ZM2226.24 217.119C2226.24 208.493 2222.33 202.633 2214.52 199.541C2211.26 198.239 2207.76 197.181 2204.02 196.367C2200.44 195.391 2197.1 193.844 2194.01 191.729V174.639H2298.5V378.008C2298.5 386.309 2302.41 392.005 2310.22 395.098C2313.48 396.4 2316.89 397.539 2320.47 398.516C2324.22 399.329 2327.47 400.794 2330.24 402.91V420H2226.24V217.119ZM2446.94 199.053C2431.97 203.122 2424.48 210.202 2424.48 220.293C2424.48 236.569 2438.72 250.16 2467.2 261.064C2489.66 269.691 2505.53 276.445 2514.81 281.328C2524.25 286.048 2532.14 291.257 2538.49 296.953C2552.65 309.974 2559.73 326.169 2559.73 345.537C2559.73 368.486 2551.02 386.878 2533.61 400.713C2516.68 414.059 2495.04 421.709 2468.67 423.662V394.365C2485.76 390.296 2494.3 380.856 2494.3 366.045C2494.3 350.745 2480.31 337.643 2452.31 326.738C2430.34 318.275 2414.71 311.683 2405.44 306.963C2396.32 302.243 2388.67 297.116 2382.49 291.582C2368.65 279.212 2361.73 263.994 2361.73 245.928C2361.73 226.396 2370.04 209.062 2386.64 193.926C2403.4 178.789 2423.5 170.732 2446.94 169.756V199.053ZM2513.83 204.18C2510.25 202.715 2495.2 201.006 2468.67 199.053V169.756C2496.99 170.895 2519.12 177.65 2535.07 190.02C2548.42 200.436 2555.09 211.992 2555.09 224.688C2555.09 240.475 2549.07 250.892 2537.03 255.938C2532.8 257.565 2526.94 258.379 2519.45 258.379C2511.96 258.379 2505.78 256.019 2500.89 251.299C2496.17 246.416 2493.81 240.475 2493.81 233.477C2493.81 221.595 2500.49 211.829 2513.83 204.18ZM2404.95 387.529C2409.18 391.273 2423.18 393.551 2446.94 394.365V423.662C2419.92 421.546 2398.68 414.385 2383.22 402.178C2370.2 391.761 2363.69 379.88 2363.69 366.533C2363.69 357.744 2366.13 350.583 2371.01 345.049C2375.89 339.352 2383.3 336.504 2393.23 336.504C2403.16 336.504 2410.48 338.701 2415.2 343.096C2420.08 347.49 2422.53 353.187 2422.53 360.186C2422.53 372.393 2416.67 381.507 2404.95 387.529Z" fill="currentColor"/>
          </svg>
          </Link>

          {/* Desktop links */}
          <div className="hidden md:flex items-center gap-2">

            {/* Language links */}
            <div
              onMouseEnter={() => setHoverLanguage(true)}
              onMouseLeave={() => setHoverLanguage(false)}
              className="relative"
            >
              
              <button className="flex items-center gap-1.5 rounded-md hover:bg-white/10 transition !py-2 !px-3">
              <svg xmlns="http://www.w3.org/2000/svg" width={18} height={18} viewBox="0 0 22 22" fill="none" className={`${ isHovering ? "text-[var(--primary)]" : "text-white" }`}>
              <path 
                d="M11 21C5.47716 21 1 16.5228 1 11C1 5.47716 5.47716 1 11 1C16.5229 1 21 5.47716 21 11C21 16.5228 16.5229 21 11 21Z" 
                stroke="currentColor" 
                strokeWidth={0.9} 
                strokeLinecap="round"
              />
              <path 
              d="M3.85718 3.85714C4.79191 3.91214 5.27484 4.36999 6.10499 5.24716C7.60444 6.83152 9.10388 6.96372 10.1035 6.4356C11.6029 5.64343 10.3429 4.3603 12.1027 3.66299C13.2497 3.2085 13.4097 1.9718 12.7713 1" 
              stroke="currentColor"
              strokeWidth={0.9} 
              strokeLinecap="round"
              />
              <path d="M20.2858 12.4286C18.1429 12.4286 17.7626 14.2097 16.0001 13.8571C12.4286 13.1429 11.4166 13.9413 11.4166 15.6444C11.4166 17.3474 11.4166 17.3474 10.6739 18.6247C10.1908 19.4556 10.0219 20.2863 10.9849 21" stroke="currentColor" strokeWidth={0.9} strokeLinecap="round"/>
              </svg>
                 <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>
                  {lang.toUpperCase()} {/* ✅ Visa current language */}
                </p>
              </button>

              {hoverLanguage && (
               <div className="absolute left-0 top-full mt-0 w-[200px] bg-white text-gray-800 rounded-md shadow-lg grid grid-cols gap-6 z-50">
                  {/* Column */}
                  <div className="flex flex-col gap-2">
                     {language.map((languageItem) => (
                        <button
                          key={languageItem.name}
                          onClick={() => changeLanguage(languageItem.code)} // lägg till code property
                          className="flex gap-2 !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                          <span className="w-5 h-5">{languageItem.icon}</span>
                          <p className="font-semibold text-[var(--primary)]">{languageItem.name}</p>
                        </button>
                      ))}
                  </div>
                  </div>
              )}
            </div>

            <Link
              href="#"
              className="flex items-center gap-1.5 rounded-md hover:bg-white/10 transition !py-2 !px-3"
            >
              <svg xmlns="http://www.w3.org/2000/svg" width={18} height={18} viewBox="0 0 20 20" fill="none" className={`${ isHovering ? "text-[var(--primary)]" : "text-white" }`}>
               <path d="M16.2438 15.3896C16.0079 15.1536 15.6254 15.1536 15.3895 15.3896C15.1537 15.6254 15.1537 16.0078 15.3895 16.2438L16.2438 15.3896ZM18.9689 19.8231C19.2047 20.059 19.5873 20.059 19.8231 19.8231C20.059 19.5873 20.059 19.2047 19.8231 18.9689L18.9689 19.8231ZM7.15745 3.94026C7.48692 3.88807 7.71173 3.57868 7.65954 3.24919C7.60735 2.9197 7.29794 2.69489 6.96847 2.74708L7.15745 3.94026ZM2.74708 6.96844C2.69489 7.29793 2.91969 7.60733 3.24917 7.65952C3.57866 7.71171 3.88807 7.48691 3.94026 7.15742L2.74708 6.96844ZM15.8167 15.8167L15.3895 16.2438L18.9689 19.8231L19.396 19.396L19.8231 18.9689L16.2438 15.3896L15.8167 15.8167ZM8.65778 16.7114V16.1074C4.54341 16.1074 1.20806 12.7721 1.20806 8.65772H0.604031H0C0 13.4392 3.87622 17.3155 8.65778 17.3155V16.7114ZM16.7114 8.65772H16.1074C16.1074 12.7721 12.7721 16.1074 8.65778 16.1074V16.7114V17.3155C13.4393 17.3155 17.3155 13.4392 17.3155 8.65772H16.7114ZM8.65778 0.604028V1.20806C12.7721 1.20806 16.1074 4.54339 16.1074 8.65772H16.7114H17.3155C17.3155 3.87619 13.4393 0 8.65778 0V0.604028ZM8.65778 0.604028V0C3.87622 0 0 3.87619 0 8.65772H0.604031H1.20806C1.20806 4.54339 4.54341 1.20806 8.65778 1.20806V0.604028ZM7.06295 3.34367L6.96847 2.74708C4.79547 3.09124 3.09124 4.79547 2.74708 6.96844L3.34367 7.06293L3.94026 7.15742C4.20256 5.50138 5.50138 4.20256 7.15745 3.94026L7.06295 3.34367Z" fill="currentColor"/>
               </svg>
              <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>Search</p>
            </Link>

            <Link
              href="#"
              className="flex items-center gap-1.5 rounded-md hover:bg-white/10 transition !py-2 !px-3"
            >
              <svg xmlns="http://www.w3.org/2000/svg" width={18} height={18} viewBox="0 0 22 22" fill="none" className={`${ isHovering ? "text-[var(--primary)]" : "text-white" }`}>
               <path d="M11 21C16.5229 21 21 16.5229 21 11C21 5.47715 16.5229 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5229 5.47715 21 11 21Z" stroke="currentColor"/>
               <path d="M11.9115 13.7936H10.324C10.3282 13.4201 10.3572 13.0983 10.4112 12.8286C10.4693 12.5547 10.5668 12.3077 10.7038 12.0878C10.8449 11.8678 11.0317 11.65 11.264 11.4341C11.4592 11.2597 11.6293 11.0937 11.7745 10.9361C11.9198 10.7783 12.0339 10.6165 12.1169 10.4505C12.1999 10.2803 12.2414 10.0915 12.2414 9.88397C12.2414 9.64322 12.2042 9.44397 12.1294 9.28622C12.0588 9.12434 11.9509 9.00197 11.8057 8.91897C11.6645 8.83597 11.486 8.79447 11.2703 8.79447C11.0918 8.79447 10.9258 8.83384 10.7723 8.91272C10.6187 8.98747 10.492 9.10359 10.3924 9.26134C10.297 9.41909 10.2472 9.62659 10.243 9.88397H8.43762C8.45007 9.31534 8.58078 8.84634 8.82978 8.47697C9.08303 8.10334 9.42128 7.82734 9.84466 7.64897C10.2679 7.46634 10.7432 7.37497 11.2703 7.37497C11.8513 7.37497 12.3494 7.47047 12.7644 7.66134C13.1794 7.84809 13.4969 8.12409 13.7169 8.48934C13.9369 8.85047 14.0469 9.29047 14.0469 9.80922C14.0469 10.1703 13.9763 10.492 13.8352 10.7742C13.694 11.0522 13.5094 11.3117 13.2812 11.5523C13.0529 11.7931 12.8018 12.0421 12.5278 12.2995C12.2913 12.5111 12.1294 12.7332 12.0423 12.9656C11.9593 13.198 11.9157 13.474 11.9115 13.7936ZM10.1372 15.7173C10.1372 15.4517 10.2285 15.2317 10.4112 15.0573C10.5938 14.879 10.8387 14.7897 11.1458 14.7897C11.4488 14.7897 11.6915 14.879 11.8742 15.0573C12.0609 15.2317 12.1543 15.4517 12.1543 15.7173C12.1543 15.9746 12.0609 16.1925 11.8742 16.371C11.6915 16.5495 11.4488 16.6387 11.1458 16.6387C10.8387 16.6387 10.5938 16.5495 10.4112 16.371C10.2285 16.1925 10.1372 15.9746 10.1372 15.7173Z" fill="currentColor"/>
               </svg>
              <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>Support</p>
            </Link>

            <Link
              href="/contactUs"
              className="flex items-center gap-1.5 rounded-md hover:bg-white/10 transition !py-2 !px-3"
            >
              <svg xmlns="http://www.w3.org/2000/svg"  width={18} height={18} viewBox="0 0 23 20" fill="none" className={`${ isHovering ? "text-[var(--primary)]" : "text-white" }`}>
               <g clipPath="url(#clip0_3218_804)">
               <path d="M8.18817 0.0075512L4.7517 0.00541782C2.81704 0.0041245 0.643233 -0.00654206 0.105243 2.32461C-0.0550961 3.019 0.0155737 3.83706 0.0151648 4.54516L0.0155735 11.4635C0.0154373 12.0682 -0.0149432 12.6869 0.026968 13.2896C0.150821 15.067 1.74079 16.4 3.64357 16.2861C3.66338 16.8696 3.5527 19.4254 3.6897 19.813C4.19161 20.3232 4.85033 19.6572 5.31113 19.3816C6.43433 18.71 7.55508 18.0289 8.66186 17.3339C9.12661 17.0419 9.99166 16.2429 10.5538 16.2861C10.9834 16.2537 11.4092 16.2782 11.8394 16.2834L13.499 16.2869C15.1417 16.288 16.7908 16.2511 18.4321 16.2822C20.8955 16.3291 22.818 15.7011 22.833 13.0578L22.837 4.2041C22.8395 2.36363 22.6656 0.530886 20.2284 0.0754847C19.6651 -0.0297288 19.0633 0.00564432 18.4907 0.00599099L8.18817 0.0075512ZM5.64742 0.88374L18.3063 0.883112C18.8462 0.88346 19.4459 0.845486 19.9775 0.93186C22.4086 1.32675 21.8908 3.92636 21.8905 5.57812L21.8897 11.0199C21.8897 15.0959 21.8339 15.4021 17.7578 15.4011L13.6566 15.4002L11.1718 15.398C10.8666 15.3959 10.4706 15.336 10.1751 15.3875C9.79049 15.4545 5.4769 18.3084 4.55855 18.7679L4.56153 16.8512C4.56181 16.584 4.67548 15.8208 4.46128 15.6181C4.00373 15.1855 2.23756 15.8735 1.30359 14.2473C0.777527 13.3316 0.933804 12.2919 0.932986 11.2851L0.933258 4.79884C0.927153 0.982434 1.34238 0.870554 5.64742 0.88374Z" fill="currentColor"/>
               <path d="M17.8502 4.89074L15.0737 4.88769C14.5785 4.88705 14.0739 4.86856 13.5798 4.89225C12.9188 4.92379 12.8751 5.49446 13.3376 5.80856C14.0274 5.80766 17.5873 5.881 17.9471 5.77044C18.4832 5.60579 18.2997 5.04625 17.8502 4.89074Z" fill="currentColor"/>
               <path d="M17.8542 7.78917H9.33392C8.46589 7.78905 5.80102 7.69774 5.12031 7.8758C4.80045 8.12771 4.92484 8.55135 5.29937 8.66356C6.36395 8.63406 7.44009 8.66369 8.50577 8.66445L14.533 8.66205C15.2198 8.66205 17.501 8.81239 18.0267 8.58922C18.474 8.39937 18.2484 7.88214 17.8542 7.78917Z" fill="currentColor"/>
               <path d="M17.853 10.6855L8.91634 10.6859C8.24799 10.6857 5.6702 10.6067 5.21467 10.7339C4.7258 10.8704 4.92208 11.4284 5.29824 11.5684C6.02302 11.6066 6.7706 11.5702 7.49756 11.5691L15.9034 11.5686C16.5294 11.5687 17.1836 11.6079 17.8067 11.5726C18.4154 11.538 18.4149 10.8256 17.853 10.6855Z" fill="currentColor"/>
               </g>
               <defs>
               <clipPath id="clip0_3218_804">
               <rect width="23" height="20" fill="white"/>
               </clipPath>
               </defs>
               </svg>
              <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>
                Contact Us
              </p>
            </Link>
          </div>

          {/* Mobile menu */}
          <MobileMenu />
        </nav>

        {/* Desktop Mega Menu */}
        <nav className="hidden lg:flex items-center justify-between pb-1 relative">
          <div className="flex items-center gap-2 relative">
            {/* Services Dropdown */}
            <div
              onMouseEnter={() => setHoverServices(true)}
              onMouseLeave={() => setHoverServices(false)}
              className="relative"
            >
              <button className="flex items-end gap-1.5 !py-2 !px-3 rounded-md hover:bg-[var(--gray-100)] transition">
                <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>
                  Services
                </p>
                <div className="w-[15px] h-[18px]">
                <svg xmlns="http://www.w3.org/2000/svg" width={15} height={15} viewBox="0 0 22 11" fill="none" className={`${ isHovering ? "text-[var(--primary)]" : "text-white" }`}>
<path 
  d="M16.0646 5.94541L12.7561 9.26766C11.7839 10.2441 10.1928 10.2441 9.22049 9.26766L1 1" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>               <path 
  d="M21 1L19.6866 2.31877" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>
               </svg>
               </div>
              </button>

              {hoverServices && (
               <div className="absolute p-3 left-0 top-full mt-0 w-[700px] bg-white text-gray-800 rounded-md shadow-lg grid grid-cols-2 gap-6 z-50">
                  {/* Column 1 */}
                  <div className="flex flex-col gap-2">
                     {services.slice(0, 4).map((service) => (
                        <Link
                        key={service.name}
                        href={service.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{service.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{service.description}</p>
                        </Link>
                     ))}
                  </div>

                  {/* Column 2 */}
                  <div className="flex flex-col gap-2">
                     {services.slice(4, 8).map((service) => (
                        <Link
                        key={service.name}
                        href={service.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{service.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{service.description}</p>
                        </Link>
                     ))}
                  </div>
                  </div>
              )}
            </div>

            {/* Destinations Dropdown */}
             <div
              onMouseEnter={() => handleDropdown("destinations", true)}
               onMouseLeave={() => handleDropdown("destinations", false)}
              className="relative"
            >
              <button className="flex items-end gap-1.5 !py-2 !px-3 rounded-md hover:bg-[var(--gray-100)] transition">
                <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>
                  Moving Destinations
                </p>
                <div className="w-[15px] h-[18px]">
                <svg xmlns="http://www.w3.org/2000/svg" width={15} height={15} viewBox="0 0 22 11" fill="none" className={`${isHovering ? "text-[var(--primary)]" : "text-white"}`}>
<path 
  d="M16.0646 5.94541L12.7561 9.26766C11.7839 10.2441 10.1928 10.2441 9.22049 9.26766L1 1" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>               <path 
  d="M21 1L19.6866 2.31877" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>
               </svg>
               </div>
              </button>

              {hoverDestinations && (
               <div className="absolute p-3 left-0 top-full mt-0 w-[700px] bg-white text-gray-800 rounded-md shadow-lg grid grid-cols-2 gap-6 z-50">
                  {/* Column 1 */}
                  <div className="flex flex-col gap-2">
                     {destinations.slice(0, 4).map((destinations) => (
                        <Link
                        key={destinations.name}
                        href={destinations.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{destinations.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{destinations.description}</p>
                        </Link>
                     ))}
                  </div>

                  {/* Column 2 */}
                  <div className="flex flex-col gap-2">
                     {destinations.slice(4, 8).map((destinations) => (
                        <Link
                        key={destinations.name}
                        href={destinations.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{destinations.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{destinations.description}</p>
                        </Link>
                     ))}
                  </div>
                  </div>
              )}
            </div>
            <Link
              href="#"
              className="flex items-end gap-1.5 !py-2 !px-3 rounded-md hover:bg-white/10 transition"
            >
              <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>Pricing</p>
            </Link>

            {/* Resources Dropdown */}
              <div
              onMouseEnter={() => handleDropdown("resources", true)}
               onMouseLeave={() => handleDropdown("resources", false)}
              className="relative"
            >
              <button className="flex items-end gap-1.5 !py-2 !px-3 rounded-md hover:bg-[var(--gray-100)] transition">
                <p className={isHovering ? "text-[var(--primary)]" : "text-white"}>
                  Resources
                </p>
                <div className="w-[15px] h-[18px]">
                <svg xmlns="http://www.w3.org/2000/svg" width={15} height={15} viewBox="0 0 22 11" fill="none" className={`${isHovering ? "text-[var(--primary)]" : "text-white"}`}>
<path 
  d="M16.0646 5.94541L12.7561 9.26766C11.7839 10.2441 10.1928 10.2441 9.22049 9.26766L1 1" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>               <path 
  d="M21 1L19.6866 2.31877" 
  stroke="currentColor" 
  strokeWidth={1.5} 
  strokeMiterlimit={10} 
  strokeLinecap="round" 
  strokeLinejoin="round"
/>
               </svg>
               </div>
              </button>

              {hoverResources && (
               <div className="absolute p-3 left-0 top-full mt-0 w-[700px] bg-white text-gray-800 rounded-md shadow-lg grid grid-cols-2 gap-6 z-50">
                  {/* Column 1 */}
                  <div className="flex flex-col gap-2">
                     {resources.slice(0, 4).map((resources) => (
                        <Link
                        key={resources.name}
                        href={resources.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{resources.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{resources.description}</p>
                        </Link>
                     ))}
                  </div>

                  {/* Column 2 */}
                  <div className="flex flex-col gap-2">
                     {resources.slice(4, 8).map((resources) => (
                        <Link
                        key={resources.name}
                        href={resources.href}
                        className="block !p-3 rounded-md hover:bg-gray-100 transition"
                        >
                        <p className="font-semibold text-[var(--primary)]">{resources.name}</p>
                        <p className="text-sm text-gray-600 mt-1">{resources.description}</p>
                        </Link>
                     ))}
                  </div>
                  </div>
              )}
            </div>
          </div>

          {/* CTA buttons */}
          <div className="flex items-center gap-2.5">
            <Button text="Login" variant="outline" />
            <Button text="Get a Quote" variant="primary" />
          </div>
        </nav>
      </div>
    </header>
  );
}